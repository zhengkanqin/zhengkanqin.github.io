<template>
	<view class="uv-page">
		<uv-cell-group>
			<uv-cell
				@click="showDatetimePicker(index)"
				:title="item.title"
				v-for="(item, index) in list"
				:key="index"
				isLink
			>
			<template v-slot:icon>
				<image
					class="uv-cell-icon"
					:src="item.iconUrl"
					mode="widthFix"
				></image>
			</template>
			</uv-cell>
		</uv-cell-group>
		<view>
		<uv-datetime-picker
			ref="datetimePicker1"
			v-model="value1"
			mode="datetime"
			@confirm="confirm"
			@cancel="cancel"
			@change="change"
			@close="close"
			round="20"
		></uv-datetime-picker>
		<uv-datetime-picker
			ref="datetimePicker2"
			v-model="value2"
			mode="date"
			@confirm="confirm"
			@cancel="cancel"
			@change="change"
			@close="close"
		></uv-datetime-picker>
		<uv-datetime-picker
			ref="datetimePicker3"
			v-model="value3"
			mode="year-month"
			@confirm="confirm"
			@cancel="cancel"
			@change="change"
			@close="close"
		></uv-datetime-picker>
		<uv-datetime-picker
			ref="datetimePicker4"
			v-model="value4"
			mode="year"
			@confirm="confirm"
			@cancel="cancel"
			@change="change"
			@close="close"
		></uv-datetime-picker>
		<uv-datetime-picker
			ref="datetimePicker5"
			v-model="value5"
			mode="time"
			@confirm="confirm"
			@cancel="cancel"
			@change="change"
			@close="close"
		></uv-datetime-picker>
		<uv-datetime-picker
			ref="datetimePicker6"
			v-model="value6"
			:filter="filter"
			mode="date"
			@confirm="confirm"
			@cancel="cancel"
			@change="change"
			@close="close"
		></uv-datetime-picker>
		<uv-datetime-picker
			ref="datetimePicker7"
			v-model="value7"
			mode="date"
			:formatter="formatter"
			@confirm="confirm"
			@cancel="cancel"
			@change="change"
			@close="close"
		></uv-datetime-picker>
		<uv-datetime-picker
			ref="datetimePicker8"
			v-model="value8"
			mode="datetime"
			:minDate="1587524800000"
			:maxDate="1893470400000"
			:closeOnClickOverlay="false"
			@confirm="confirm"
			@cancel="cancel"
			@change="change"
			@close="close"
		></uv-datetime-picker>
		</view>
	</view>
</template>
<script>
	import { padZero, timeFormat, toast } from '@/uni_modules/uv-ui-tools/libs/function/index.js'
	export default {
		data() {
			const d = new Date()
			const year = d.getFullYear()
			let month = padZero(d.getMonth() + 1)
			const date = d.getDate()
			return {
				value1: Number(new Date()),
				value2: Number(new Date()),
				value3: Number(new Date()),
				value4: Number(new Date()),
				value5: '05:28',
				value6: Number(new Date()),
				value7: Number(new Date()),
				value8: Number(new Date()),
				list: [{
						title: '完整日期时间',
						iconUrl: 'https://cdn.uviewui.com/uview/demo/datetime-picker/6.png'
					}, {
						title: '年月日',
						iconUrl: 'https://cdn.uviewui.com/uview/demo/datetime-picker/4.png'
					}, {
						title: '年月',
						iconUrl: 'https://cdn.uviewui.com/uview/demo/datetime-picker/3.png'
					},{
						title: '年',
						iconUrl: 'https://cdn.uviewui.com/uview/demo/datetime-picker/2.png'
					}, {
						title: '时间',
						iconUrl: 'https://cdn.uviewui.com/uview/demo/datetime-picker/5.png'
					}, {
						title: '过滤器(保留偶数年)',
						iconUrl: 'https://cdn.uviewui.com/uview/demo/datetime-picker/2.png'
					}, {
						title: '格式化',
						iconUrl: 'https://cdn.uviewui.com/uview/demo/datetime-picker/1.png'
					}, {
						title: '限制最大最小值',
						iconUrl: 'https://cdn.uviewui.com/uview/demo/datetime-picker/7.png'
					}
				]
			}
		},
		methods: {
			showDatetimePicker(index) {
				this.value1 = Number(new Date());
				this.$refs[`datetimePicker${index+1}`].open();
			},
			close() {
				console.log('close');
			},
			cancel() {
				console.log('cancel');
			},
			confirm(e) {
				console.log('confirm',e);
				this.result(e.value, e.mode)
			},
			change(e) {
				console.log('change', e)
			},
			result(time, mode) {
				switch (mode) {
					case 'datetime':
						return toast(timeFormat(time, 'yyyy-mm-dd hh:MM'))
					case 'date':
						return toast(timeFormat(time, 'yyyy-mm-dd'))
					case 'year-month':
						return toast(timeFormat(time, 'yyyy-mm'))
					case 'time':
						return toast(time)
					case 'year':
						return toast(timeFormat(time, 'yyyy'))
					default:
						return ''
				}
			},
			filter(type, options) {
				if (type === 'year') {
					return options.filter((option) => option % 2 === 0)
				}
				return options;
			},
			formatter(type, value) {
				if (type === 'year') {
					return `${value}年`
				}
				if (type === 'month') {
					return `${value}月`
				}
				if (type === 'day') {
					return `${value}日`
				}
				return value
			},
		},
	}
</script>

<style lang="scss">
	.uv-page {
		padding: 0;
	}
</style>
